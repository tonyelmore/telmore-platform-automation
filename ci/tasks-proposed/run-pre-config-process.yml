# For each task
#   Interpolate all of the parameters 
#   Export the list of parameters
#   Source the task


#   export FOUNDASTION+NAME=blah
#   export WAVEFRONT_AUTOMATION_API_TOKEN = force-unlock
#   source ${task}


---
platform: linux

inputs:
- name: task-repo

params:
  FOUNDATION: 
  PARAM_FILE: 
  VARS_FILES:

run:
  path: bash
  args:
  - "-c"
  - |
    cat /var/version && echo ""
    set -eux

    echo "Pre-configure process started"

    echo "Install yq"
    apt-get -y update && apt-get -y install wget
    wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq && chmod +x /usr/bin/yq
    yq -h

    echo "Foundation name is: ${FOUNDATION}"
    echo "Param file is: ${PARAM_FILE}"

    # Get the task name from the param_file - that is the task to execute

    # Some test code to set up interpolation and exporting of env variables
    # Because I don't have prepare-tasks-with-secrets integrated yet
    export OM_VARS_ENV=MY
    export MY_foundation=sandbox
    export MY_wavefront_automation_api_token=my-wavefront-token
    export MY_bar=foobar
    om interpolate -c task-repo/${PARAM_FILE} > task-repo/${PARAM_FILE}.interpolated
    # End of test code

    tasks=$(yq  -r '.[] | .task' task-repo/${PARAM_FILE}.interpolated)
    for task in ${tasks[@]}; do
      echo "Task is: ${task}"
      # Interpolate all of the parameters for the task
      params=$(yq eval ".[] | select(.task == \"$task\") | .params | to_entries[] | .key + \"=\" + .value" task-repo/${PARAM_FILE}.interpolated)


      while IFS= read -r param; do
        key=$(echo "$param" | cut -d '=' -f1)
        value=$(echo "$param" | cut -d '=' -f2-)

        # Remove colon if present in the value
        value="${value/:/}"

        export "${key}"="${value}"
      done <<< "${params}"

      echo "Running task: ${task}"
      source task-repo/ci/tasks-proposed/${task}
      echo "Completed task: ${task}"

    done

    echo "Pre-configure process completed"
