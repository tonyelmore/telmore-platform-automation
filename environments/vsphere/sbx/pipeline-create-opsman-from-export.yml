resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource

resources:
- name: platform-automation
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: platform-automation

- name: installation
  type: gcs-resource
  source:
    bucket: telmore-vsphere-opsman-exports
    json_key: ((opsman_export_cloud_storage_key))
    regexp: ((foundation))/installation-(.*).zip

- name: state
  type: git
  source:
    branch: master
    password: ((github_token))
    uri: https://github.com/tonyelmore/telmore-platform-automation.git
    username: ((github_username))

- name: director-configuration
  type: git
  source:
    branch: master
    password: ((github_token))
    uri: https://github.com/tonyelmore/telmore-platform-automation.git
    username: ((github_username))
    paths:
    - "environments/((iaas))/((foundation))/config-director"

jobs:
- name: validate-director-configuration
  plan:
  - aggregate:
    - get: director-configuration
      trigger: true
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: &director_credhub_interpolate_params
      CREDHUB_SERVER: https://credhub.haas-424.pez.pivotal.io:8844
      CREDHUB_CA_CERT: ((concourse_credhub_ca))
      CREDHUB_CLIENT: ((concourse_credhub_client_username))
      CREDHUB_SECRET: ((concourse_credhub_client_secret))
      PREFIX: '/concourse/((team))'
      INTERPOLATION_PATHS: "environments/((iaas))/((foundation))/config-director/secrets"
    input_mapping:
      files: director-configuration

- name: install-opsman
  plan:
  - aggregate:
    - get: director-configuration
      trigger: true
      passed: ["validate-director-configuration"]
    - get: state
    - get: installation
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: *director_credhub_interpolate_params
    input_mapping:
      files: director-configuration



  # download product
  - task: download-opsman-image
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config-director/versions/opsman.yml
      VARS_FILES: secrets/environments/((iaas))/((foundation))/config-director/secrets/pivnet.yml
    input_mapping:
      config: director-configuration
      secrets: interpolated-files
    output_mapping:
      downloaded-product: opsman-image

  # create vm
  - task: create-vm
    image: platform-automation-image
    file: platform-automation-tasks/tasks/create-vm.yml
    input_mapping:
      image: opsman-image
      config: director-configuration
      secrets: interpolated-files
      state: state
    params:
      STATE_FILE: environments/((iaas))/((foundation))/state/state.yml
      VARS_FILES: |
        config/environments/((iaas))/common-director/opsman.yml
        config/environments/((iaas))/((foundation))/config-director/vars/infra.yml
        config/environments/((iaas))/((foundation))/config-director/vars/opsman.yml
        secrets/environments/((iaas))/((foundation))/config-director/secrets/opsman.yml
        secrets/environments/((iaas))/((foundation))/config-director/secrets/pivnet.yml
      OPSMAN_CONFIG_FILE: environments/((iaas))/((foundation))/config-director/templates/opsman.yml
    ensure: &make-state-commit
      do:
        - task: make-git-commit
          image: platform-automation-image
          file: director-configuration/ci/tasks-proposed/z_make-commit.yml
          input_mapping:
            repository: state
            file-source: generated-state
          output_mapping:
            repository-commit: state-commit
          params:
            FILE_SOURCE_PATH: state.yml
            FILE_DESTINATION_PATH: environments/((iaas))/((foundation))/state/state.yml
            GIT_AUTHOR_EMAIL: "aelmore@pivotal.io"
            GIT_AUTHOR_NAME: "Platform Automation"
            COMMIT_MESSAGE: 'Update state file'
        - put: state
          params:
            repository: state-commit
            merge: true

  # Import installation
  - task: import-installation
    image: platform-automation-image
    file: platform-automation-tasks/tasks/import-installation.yml
    input_mapping:
      env: interpolated-files
      installation: installation
    params:
      INSTALLATION_FILE: installation*.zip
      ENV_FILE: environments/((iaas))/((foundation))/config-director/secrets/env.yml

  # Apply Change to Director
  - task: apply-director-changes
    image: platform-automation-image
    file: platform-automation-tasks/tasks/apply-director-changes.yml
    input_mapping:
      env: interpolated-files
    params:
      ENV_FILE: environments/((iaas))/((foundation))/config-director/secrets/env.yml
