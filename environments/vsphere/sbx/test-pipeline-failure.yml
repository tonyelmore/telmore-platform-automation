resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

task-config: &task-config
  platform: linux
  image_resource:
    type: registry-image
    source: { repository: busybox }

resources:
- name: platform-automation
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: platform-automation

- name: director-configuration
  type: git
  source:
    branch: master
    password: ((github_token))
    uri: https://github.com/tonyelmore/telmore-platform-automation.git
    username: ((github_username))

jobs:
- name: test-failure-job
  plan:
  - in_parallel:
    - get: director-configuration
      trigger: true
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["platform-automation-image*"]

  - task: do-not-fail
    image: platform-automation-image
    file: director-configuration/ci/tasks-proposed/test-failure.yml
    params:
      FAIL_FLAG: false
      SOME_STRING: "this is some overloaded string"
    on_success:
      task: task-success
      config:
        << : *task-config
        run:
          path: echo
          args: ["This task succeeded!"]

  - task: fail-this-task
    image: platform-automation-image
    file: director-configuration/ci/tasks-proposed/test-failure.yml
    params:
      FAIL_FLAG: true
      SOME_STRING: "this is some overloaded string for failure"
    on_failure:
      task: task-failure
        image: platform-automation-image
        file: director-configuration/ci/tasks-proposed/test-failure.yml
        params:
          SOME_STRING: "Build failed: ${ATC_EXTERNAL_URL}/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}"

  - task: failing-task
    config:
      << : *task-config
      run:
        path: sh
        args: ["-lc", "exit 1"]
    on_failure:
      task: task-failure
      config:
        << : *task-config
        run:
          path: echo
          args: ["This task failed!"]

  on_success:
    task: job-success
    config:
      << : *task-config
      run:
        path: echo
        args: ["This job succeeded!"]
  on_failure:
    task: job-failure
    config:
      << : *task-config
      run:
        path: echo
        args: ["This job failed!"]
  on_abort:
    task: job-aborted
    config:
      << : *task-config
      run:
        path: echo
        args: ["This job was aborted!"]



# ---
# task-config: &task-config
#   platform: linux
#   image_resource:
#     type: registry-image
#     source: { repository: busybox }

# jobs:
# - name: job
#   public: true
#   plan:
#     - task: successful-task
#       config:
#         << : *task-config
#         run:
#           path: sh
#           args: ["-lc", "exit 0"]
#       on_success:
#         task: task-success
#         config:
#           << : *task-config
#           run:
#             path: echo
#             args: ["This task succeeded!"]
#       on_abort:
#         task: task-aborted
#         config:
#           << : *task-config
#           run:
#             path: echo
#             args: ["This task was aborted!"]
#     - task: failing-task
#       config:
#         << : *task-config
#         run:
#           path: sh
#           args: ["-lc", "exit 1"]
#       on_failure:
#         task: task-failure
#         config:
#           << : *task-config
#           run:
#             path: echo
#             args: ["This task failed!"]
#   on_success:
#     task: job-success
#     config:
#       << : *task-config
#       run:
#         path: echo
#         args: ["This job succeeded!"]
#   on_failure:
#     task: job-failure
#     config:
#       << : *task-config
#       run:
#         path: echo
#         args: ["This job failed!"]
#   on_abort:
#     task: job-aborted
#     config:
#       << : *task-config
#       run:
#         path: echo
#         args: ["This job was aborted!"]