resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource

- name: concourse-pipeline
  type: docker-image
  source:
    repository: concourse/concourse-pipeline-resource
    tag: 1.1.0

resources:
- name: platform-automation
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: platform-automation

- name: installation
  type: gcs-resource
  source:
    bucket: telmore-vsphere-opsman-exports
    json_key: ((opsman_export_cloud_storage_key))
    regexp: ((foundation))/installation-(.*).zip

- name: state
  type: git
  source:
    branch: master
    password: ((github_token))
    uri: https://github.com/tonyelmore/telmore-platform-automation.git
    username: ((github_username))

- name: configuration
  type: git
  source:
    branch: master
    password: ((github_token))
    uri: https://github.com/tonyelmore/telmore-platform-automation.git
    username: ((github_username))
    paths:
    - "environments/((iaas))/((foundation))/pipeline.yml"
    - "environments/((iaas))/((foundation))/config"

- name: director-configuration
  type: git
  source:
    branch: master
    password: ((github_token))
    uri: https://github.com/tonyelmore/telmore-platform-automation.git
    username: ((github_username))
    paths:
    - "environments/((iaas))/((foundation))/config-director"

- name: lock
  type: pool
  source:
    uri: https://github.com/tonyelmore/telmore-platform-automation.git
    branch: master
    username: ((github_username))
    password: ((github_token))
    pool: locks/((lock_pool_name))
    retry_delay: 1m

# - name: fly
#   type: concourse-pipeline
#   source:
#     target: https://plane.haas-xxx.pez.vmware.com/
#     insecure: "true"
#     teams:
#     - name: ((team))
#       username: ((concourse_user))
#       password: ((concourse_password))

jobs:
- name: force-unlock
  serial: true
  plan:
  - get: lock
  - put: lock
    params:
      release: lock

- name: lock-director
  serial: true
  plan:
  - aggregate:
    - put: lock
      params: {acquire: true}
    - get: director-configuration
      trigger: true

- name: validate-director-configuration
  plan:
  - aggregate:
    - get: director-configuration
      trigger: true
      passed: ["lock-director"]
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: &director_credhub_interpolate_params
      CREDHUB_SERVER: ((concourse_credhub_server))
      CREDHUB_CA_CERT: ((concourse_credhub_ca))
      CREDHUB_CLIENT: ((concourse_credhub_client_username))
      CREDHUB_SECRET: ((concourse_credhub_client_secret))
      PREFIX: '/concourse/((team))'
      INTERPOLATION_PATHS: "environments/((iaas))/((foundation))/config-director/secrets"
    input_mapping:
      files: director-configuration

- name: install-opsman
  plan:
  - aggregate:
    - get: director-configuration
      trigger: true
      passed: ["validate-director-configuration"]
    - get: state
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: *director_credhub_interpolate_params
    input_mapping:
      files: director-configuration

  - task: download-create-opsman
    image: platform-automation-image
    file: director-configuration/ci/tasks-proposed/download-create-opsman.yml
    input_mapping:
      download-config: director-configuration
      state: state
      config: director-configuration
      vars: director-configuration
      secrets: interpolated-files
    params:
      DOWNLOAD_CONFIG_FILE: environments/((iaas))/((foundation))/config-director/versions/opsman.yml
      STATE_FILE: environments/((iaas))/((foundation))/state/state.yml
      OPSMAN_CONFIG_FILE: environments/((iaas))/((foundation))/config-director/templates/opsman.yml
      VARS_FILES: |
        vars/environments/((iaas))/common-director/opsman.yml
        vars/environments/((iaas))/((foundation))/config-director/vars/infra.yml
        vars/environments/((iaas))/((foundation))/config-director/vars/opsman.yml
        secrets/environments/((iaas))/((foundation))/config-director/secrets/opsman.yml
        secrets/environments/((iaas))/((foundation))/config-director/secrets/pivnet.yml

    ensure: &make-state-commit
      do:
        - task: make-git-commit
          image: platform-automation-image
          file: director-configuration/ci/tasks-proposed/z_make-commit.yml
          input_mapping:
            repository: state
            file-source: generated-state
          output_mapping:
            repository-commit: state-commit
          params:
            FILE_SOURCE_PATH: state.yml
            FILE_DESTINATION_PATH: environments/((iaas))/((foundation))/state/state.yml
            GIT_AUTHOR_EMAIL: "aelmore@vmware.com"
            GIT_AUTHOR_NAME: "Platform Automation"
            COMMIT_MESSAGE: 'Update state file'
        - put: state
          params:
            repository: state-commit
            merge: true

  - task: configure-authentication
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-authentication.yml
    attempts: 20
    input_mapping:
      env: interpolated-files
      config: interpolated-files
    params:
      ENV_FILE: environments/((iaas))/((foundation))/config-director/secrets/env.yml
      AUTH_CONFIG_FILE: environments/((iaas))/((foundation))/config-director/secrets/auth.yml

  - task: configure-director
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-director.yml
    input_mapping:
      config: director-configuration
      env: interpolated-files
      vars: director-configuration
      secrets: interpolated-files
    params:
      ENV_FILE: environments/((iaas))/((foundation))/config-director/secrets/env.yml
      DIRECTOR_CONFIG_FILE: environments/((iaas))/((foundation))/config-director/templates/director.yml
      VARS_FILES: |
        vars/environments/((iaas))/common-director/director.yml
        vars/environments/((iaas))/((foundation))/config-director/vars/infra.yml
        vars/environments/((iaas))/((foundation))/config-director/vars/director.yml
        secrets/environments/((iaas))/((foundation))/config-director/secrets/director.yml

  - task: apply-director-changes
    image: platform-automation-image
    file: platform-automation-tasks/tasks/apply-director-changes.yml
    input_mapping:
      env: interpolated-files
    params:
      ENV_FILE: environments/((iaas))/((foundation))/config-director/secrets/env.yml

- name: export-installation
  plan:
  - aggregate:
    - get: director-configuration
      trigger: true
      passed: [ install-opsman ]
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: *director_credhub_interpolate_params
    input_mapping:
      files: director-configuration

  - task: export-installation
    image: platform-automation-image
    file: platform-automation-tasks/tasks/export-installation.yml
    input_mapping:
      env: interpolated-files
    params:
      ENV_FILE: environments/((iaas))/((foundation))/config-director/secrets/env.yml
  - put: installation
    params:
      file: installation/installation-*.zip

- name: upgrade-opsman
  plan:
  - aggregate:
    - get: director-configuration
      trigger: true
      passed: [ export-installation ]
    - get: state
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]
    - get: installation
      passed: [ export-installation ]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: *director_credhub_interpolate_params
    input_mapping:
      files: director-configuration

  - task: download-upgrade-opsman
    image: platform-automation-image
    file: director-configuration/ci/tasks-proposed/download-upgrade-opsman.yml
    input_mapping:
      download-config: director-configuration
      state: state
      config: director-configuration
      vars: director-configuration
      secrets: interpolated-files
      installation: installation
      env: interpolated-files
    params:
      DOWNLOAD_CONFIG_FILE: environments/((iaas))/((foundation))/config-director/versions/opsman.yml
      STATE_FILE: environments/((iaas))/((foundation))/state/state.yml
      OPSMAN_CONFIG_FILE: environments/((iaas))/((foundation))/config-director/templates/opsman.yml
      VARS_FILES: |
        vars/environments/((iaas))/common-director/opsman.yml
        vars/environments/((iaas))/((foundation))/config-director/vars/infra.yml
        vars/environments/((iaas))/((foundation))/config-director/vars/opsman.yml
        secrets/environments/((iaas))/((foundation))/config-director/secrets/opsman.yml
        secrets/environments/((iaas))/((foundation))/config-director/secrets/pivnet.yml
      ENV_FILE: environments/((iaas))/((foundation))/config-director/secrets/env.yml
    ensure: *make-state-commit

  - task: apply-director-changes
    image: platform-automation-image
    file: platform-automation-tasks/tasks/apply-director-changes.yml
    input_mapping:
      env: interpolated-files
    params:
      ENV_FILE: environments/((iaas))/((foundation))/config-director/secrets/env.yml

- name: unlock-director
  serial: true
  plan:
  - get: director-configuration
    trigger: true
    passed:
    - "upgrade-opsman"
  - get: lock
  - put: lock
    params:
      release: lock




- name: lock-tiles
  serial: true
  plan:
  - aggregate:
    - put: lock
      params: {acquire: true}
    - get: configuration
      trigger: true

- name: validate-tile-configuration
  plan:
  - aggregate:
    - get: configuration
      trigger: true
      passed: ["lock-tiles"]
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: &credhub_interpolate_params
      CREDHUB_SERVER: ((concourse_credhub_server))
      CREDHUB_CA_CERT: ((concourse_credhub_ca))
      CREDHUB_CLIENT: ((concourse_credhub_client_username))
      CREDHUB_SECRET: ((concourse_credhub_client_secret))
      PREFIX: '/concourse/((team))'
      INTERPOLATION_PATHS: "environments/((iaas))/((foundation))/config/secrets"
    input_mapping:
      files: configuration

- name: pas
  serial: true
  plan:
  - aggregate:
    - get: configuration
      trigger: true
      passed: [ validate-tile-configuration ]
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: *credhub_interpolate_params
    input_mapping:
      files: configuration

  - task: download-stage-tile-stemcell-nsx-t
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/download-stage-tile-stemcell.yml
    input_mapping:
      config: configuration
      download-config: configuration
      env: interpolated-files
      secrets: interpolated-files
    params:
      DOWNLOAD_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/vmware-nsx-t.yml
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/vmware-nsx-t.yml
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      VARS_FILES: secrets/environments/((iaas))/((foundation))/config/secrets/pivnet.yml

  - task: download-stage-tile-stemcell
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/download-stage-tile-stemcell.yml
    input_mapping:
      config: configuration
      download-config: configuration
      env: interpolated-files
      secrets: interpolated-files
    params:
      DOWNLOAD_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/cf.yml
      DOWNLOAD_STEMCELL_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/cf-stemcell.yml
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/cf.yml
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      VARS_FILES: secrets/environments/((iaas))/((foundation))/config/secrets/pivnet.yml

  - task: configure-nsx
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-product.yml
    input_mapping:
      config: configuration
      env: interpolated-files
      vars: configuration
      secrets: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/vmware-nsx-t.yml
      VARS_FILES: |
        vars/environments/((iaas))/((foundation))/config/defaults/vmware-nsx-t.yml
        vars/environments/((iaas))/common/vmware-nsx-t.yml
        vars/environments/((iaas))/((foundation))/config/vars/vmware-nsx-t.yml
        secrets/environments/((iaas))/((foundation))/config/secrets/vmware-nsx-t.yml
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

  - task: configure
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-product.yml
    input_mapping:
      config: configuration
      env: interpolated-files
      vars: configuration
      secrets: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/cf.yml
      VARS_FILES: |
        vars/environments/((iaas))/((foundation))/config/defaults/cf.yml
        vars/environments/((iaas))/common/cf.yml
        vars/environments/((iaas))/((foundation))/config/vars/cf.yml
        secrets/environments/((iaas))/((foundation))/config/secrets/cf.yml
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

  - task: apply-product-changes-nsx-t
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/apply-product-changes.yml
    attempts: 10
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/vmware-nsx-t.yml
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

  - task: apply-product-changes
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/apply-product-changes.yml
    attempts: 10
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/cf.yml
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

- name: pas-errands
  plan:
  - aggregate:
    - get: configuration
      trigger: true
      passed: [ pas ]
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: *credhub_interpolate_params
    input_mapping:
      files: configuration

  - task: run-smoke_tests
    attempts: 5
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/run-errand.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/cf.yml
      ERRAND_NAME: smoke_tests
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      INSTANCE: clock_global/first

  - task: run-push-usage-service
    attempts: 5
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/run-errand.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/cf.yml
      ERRAND_NAME: push-usage-service
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      INSTANCE: clock_global/first

  - task: run-push-apps-manager
    attempts: 5
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/run-errand.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/cf.yml
      ERRAND_NAME: push-apps-manager
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      INSTANCE: clock_global/first

  - task: run-deploy-notifications
    attempts: 5
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/run-errand.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/cf.yml
      ERRAND_NAME: deploy-notifications
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      INSTANCE: clock_global/first

  - task: run-deploy-notifications-ui
    attempts: 5
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/run-errand.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/cf.yml
      ERRAND_NAME: deploy-notifications-ui
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      INSTANCE: clock_global/first

  - task: run-deploy-autoscaler
    attempts: 5
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/run-errand.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/cf.yml
      ERRAND_NAME: deploy-autoscaler
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      INSTANCE: clock_global/first

  - task: run-nfsbrokerpush
    attempts: 5
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/run-errand.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/cf.yml
      ERRAND_NAME: nfsbrokerpush
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      INSTANCE: clock_global/first

  - task: run-test-autoscaling
    attempts: 5
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/run-errand.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/cf.yml
      ERRAND_NAME: deploy-notifications-ui
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      INSTANCE: clock_global/first

- name: pivotal-mysql
  serial: true
  plan:
  - aggregate:
    - get: configuration
      trigger: true
      passed: [ pas ]
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: *credhub_interpolate_params
    input_mapping:
      files: configuration

  - task: download-stage-tile-stemcell
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/download-stage-tile-stemcell.yml
    input_mapping:
      config: configuration
      download-config: configuration
      env: interpolated-files
      secrets: interpolated-files
    params:
      DOWNLOAD_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/pivotal-mysql.yml
      DOWNLOAD_STEMCELL_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/pivotal-mysql-stemcell.yml
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/pivotal-mysql.yml
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      VARS_FILES: secrets/environments/((iaas))/((foundation))/config/secrets/pivnet.yml

  - task: configure
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-product.yml
    input_mapping:
      config: configuration
      env: interpolated-files
      vars: configuration
      secrets: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/pivotal-mysql.yml
      VARS_FILES: |
        vars/environments/((iaas))/((foundation))/config/defaults/pivotal-mysql.yml
        vars/environments/((iaas))/common/pivotal-mysql.yml
        vars/environments/((iaas))/((foundation))/config/vars/pivotal-mysql.yml
        secrets/environments/((iaas))/((foundation))/config/secrets/pivotal-mysql.yml
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

  - task: apply-product-changes
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/apply-product-changes.yml
    attempts: 10
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/pivotal-mysql.yml
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

- name: pivotal-mysql-errands
  plan:
  - aggregate:
    - get: configuration
      trigger: true
      passed: [ pivotal-mysql ]
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: *credhub_interpolate_params
    input_mapping:
      files: configuration

  - task: register-broker
    attempts: 5
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/run-errand.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/pivotal-mysql.yml
      ERRAND_NAME: register-broker
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      INSTANCE: dedicated-mysql-broker/first

  - task: smoke-tests
    attempts: 5
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/run-errand.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/pivotal-mysql.yml
      ERRAND_NAME: smoke-tests
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      INSTANCE: dedicated-mysql-broker/first

  - task: upgrade-all-service-instances
    attempts: 5
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/run-errand.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/pivotal-mysql.yml
      ERRAND_NAME: upgrade-all-service-instances
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      INSTANCE: dedicated-mysql-broker/first

- name: p-healthwatch
  serial: true
  plan:
  - aggregate:
    - get: configuration
      trigger: true
      passed: [ pivotal-mysql ]
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: *credhub_interpolate_params
    input_mapping:
      files: configuration

  - task: download-stage-tile-stemcell
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/download-stage-tile-stemcell.yml
    input_mapping:
      config: configuration
      download-config: configuration
      env: interpolated-files
      secrets: interpolated-files
    params:
      DOWNLOAD_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/p-healthwatch.yml
      DOWNLOAD_STEMCELL_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/p-healthwatch-stemcell.yml
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-healthwatch.yml
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      VARS_FILES: secrets/environments/((iaas))/((foundation))/config/secrets/pivnet.yml

  - task: configure
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-product.yml
    input_mapping:
      config: configuration
      env: interpolated-files
      vars: configuration
      secrets: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-healthwatch.yml
      VARS_FILES: |
        vars/environments/((iaas))/((foundation))/config/defaults/p-healthwatch.yml
        vars/environments/((iaas))/common/p-healthwatch.yml
        vars/environments/((iaas))/((foundation))/config/vars/p-healthwatch.yml
        secrets/environments/((iaas))/((foundation))/config/secrets/p-healthwatch.yml
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

  - task: apply-product-changes
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/apply-product-changes.yml
    attempts: 10
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-healthwatch.yml
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

- name: p-healthwatch-errands
  plan:
  - aggregate:
    - get: configuration
      trigger: true
      passed: [ p-healthwatch ]
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: *credhub_interpolate_params
    input_mapping:
      files: configuration

  - task: push-apps
    attempts: 5
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/run-errand.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-healthwatch.yml
      ERRAND_NAME: push-apps
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      INSTANCE: healthwatch-forwarder/first

  - task: smoke-tests
    attempts: 5
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/run-errand.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-healthwatch.yml
      ERRAND_NAME: smoke-tests
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      INSTANCE: healthwatch-forwarder/first

- name: p-rabbitmq
  serial: true
  plan:
  - aggregate:
      - get: configuration
        trigger: true
        passed: [ p-healthwatch ]
      - get: platform-automation-image
        resource: platform-automation
        params:
          unpack: true
          globs: ["*image*"]
      - get: platform-automation-tasks
        resource: platform-automation
        params:
          unpack: true
          globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: *credhub_interpolate_params
    input_mapping:
      files: configuration

  - task: download-stage-tile-stemcell
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/download-stage-tile-stemcell.yml
    input_mapping:
      config: configuration
      download-config: configuration
      env: interpolated-files
      secrets: interpolated-files
    params:
      DOWNLOAD_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/p-rabbitmq.yml
      DOWNLOAD_STEMCELL_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/p-rabbitmq-stemcell.yml
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-rabbitmq.yml
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      VARS_FILES: secrets/environments/((iaas))/((foundation))/config/secrets/pivnet.yml

  - task: configure
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-product.yml
    input_mapping:
      config: configuration
      env: interpolated-files
      vars: configuration
      secrets: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-rabbitmq.yml
      VARS_FILES: |
        vars/environments/((iaas))/((foundation))/config/defaults/p-rabbitmq.yml
        vars/environments/((iaas))/common/p-rabbitmq.yml
        vars/environments/((iaas))/((foundation))/config/vars/p-rabbitmq.yml
        secrets/environments/((iaas))/((foundation))/config/secrets/p-rabbitmq.yml
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

  - task: apply-product-changes
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/apply-product-changes.yml
    attempts: 10
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-rabbitmq.yml
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

- name: p-rabbitmq-errands
  plan:
  - aggregate:
      - get: configuration
        trigger: true
        passed: [ p-rabbitmq ]
      - get: platform-automation-image
        resource: platform-automation
        params:
          unpack: true
          globs: ["*image*"]
      - get: platform-automation-tasks
        resource: platform-automation
        params:
          unpack: true
          globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: *credhub_interpolate_params
    input_mapping:
      files: configuration

  - task: broker-registrar
    attempts: 5
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/run-errand.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-rabbitmq.yml
      ERRAND_NAME: broker-registrar
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      INSTANCE: rabbitmq-broker/first

  - task: smoke-tests
    attempts: 5
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/run-errand.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-rabbitmq.yml
      ERRAND_NAME: smoke-tests
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      INSTANCE: rabbitmq-broker/first

  - task: register-broker
    attempts: 5
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/run-errand.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-rabbitmq.yml
      ERRAND_NAME: register-broker
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      INSTANCE: on-demand-broker/first

  - task: on-demand-broker-smoke-tests
    attempts: 5
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/run-errand.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-rabbitmq.yml
      ERRAND_NAME: on-demand-broker-smoke-tests
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      INSTANCE: on-demand-broker/first

  - task: upgrade-all-service-instances
    attempts: 5
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/run-errand.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-rabbitmq.yml
      ERRAND_NAME: upgrade-all-service-instances
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      INSTANCE: on-demand-broker/first

- name: p-redis
  serial: true
  plan:
    - aggregate:
        - get: configuration
          trigger: true
          passed: [ p-rabbitmq ]
        - get: platform-automation-image
          resource: platform-automation
          params:
            unpack: true
            globs: ["*image*"]
        - get: platform-automation-tasks
          resource: platform-automation
          params:
            unpack: true
            globs: ["*tasks*"]

    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params: *credhub_interpolate_params
      input_mapping:
        files: configuration

    - task: download-stage-tile-stemcell
      image: platform-automation-image
      file: configuration/ci/tasks-proposed/download-stage-tile-stemcell.yml
      input_mapping:
        config: configuration
        download-config: configuration
        env: interpolated-files
        secrets: interpolated-files
      params:
        DOWNLOAD_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/p-redis.yml
        DOWNLOAD_STEMCELL_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/p-redis-stemcell.yml
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-redis.yml
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
        VARS_FILES: secrets/environments/((iaas))/((foundation))/config/secrets/pivnet.yml

    - task: configure
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-product.yml
      input_mapping:
        config: configuration
        env: interpolated-files
        vars: configuration
        secrets: interpolated-files
      params:
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-redis.yml
        VARS_FILES: |
          vars/environments/((iaas))/((foundation))/config/defaults/p-redis.yml
          vars/environments/((iaas))/common/p-redis.yml
          vars/environments/((iaas))/((foundation))/config/vars/p-redis.yml
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

    - task: apply-product-changes
      image: platform-automation-image
      file: configuration/ci/tasks-proposed/apply-product-changes.yml
      attempts: 10
      input_mapping:
        config: configuration
        env: interpolated-files
      params:
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-redis.yml
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

- name: p-redis-errands
  plan:
    - aggregate:
        - get: configuration
          trigger: true
          passed: [ p-redis ]
        - get: platform-automation-image
          resource: platform-automation
          params:
            unpack: true
            globs: ["*image*"]
        - get: platform-automation-tasks
          resource: platform-automation
          params:
            unpack: true
            globs: ["*tasks*"]

    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params: *credhub_interpolate_params
      input_mapping:
        files: configuration

    - task: broker-registrar
      attempts: 5
      image: platform-automation-image
      file: configuration/ci/tasks-proposed/run-errand.yml
      input_mapping:
        config: configuration
        env: interpolated-files
      params:
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-redis.yml
        ERRAND_NAME: broker-registrar
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
        INSTANCE: cf-redis-broker/first

    - task: on-demand-broker-smoke-tests
      attempts: 5
      image: platform-automation-image
      file: configuration/ci/tasks-proposed/run-errand.yml
      input_mapping:
        config: configuration
        env: interpolated-files
      params:
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-redis.yml
        ERRAND_NAME: on-demand-broker-smoke-tests
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
        INSTANCE: cf-redis-broker/first

    - task: register-broker
      attempts: 5
      image: platform-automation-image
      file: configuration/ci/tasks-proposed/run-errand.yml
      input_mapping:
        config: configuration
        env: interpolated-files
      params:
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-redis.yml
        ERRAND_NAME: register-broker
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
        INSTANCE: cf-redis-broker/first

    - task: smoke-tests
      attempts: 5
      image: platform-automation-image
      file: configuration/ci/tasks-proposed/run-errand.yml
      input_mapping:
        config: configuration
        env: interpolated-files
      params:
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-redis.yml
        ERRAND_NAME: smoke-tests
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
        INSTANCE: cf-redis-broker/first

    - task: upgrade-all-service-instances
      attempts: 5
      image: platform-automation-image
      file: configuration/ci/tasks-proposed/run-errand.yml
      input_mapping:
        config: configuration
        env: interpolated-files
      params:
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-redis.yml
        ERRAND_NAME: upgrade-all-service-instances
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
        INSTANCE: cf-redis-broker/first

- name: apmPostgres
  serial: true
  plan:
    - aggregate:
        - get: configuration
          trigger: true
          passed: [ p-redis ]
        - get: platform-automation-image
          resource: platform-automation
          params:
            unpack: true
            globs: ["*image*"]
        - get: platform-automation-tasks
          resource: platform-automation
          params:
            unpack: true
            globs: ["*tasks*"]

    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params: *credhub_interpolate_params
      input_mapping:
        files: configuration

    - task: download-stage-tile-stemcell
      image: platform-automation-image
      file: configuration/ci/tasks-proposed/download-stage-tile-stemcell.yml
      input_mapping:
        config: configuration
        download-config: configuration
        env: interpolated-files
        secrets: interpolated-files
      params:
        DOWNLOAD_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/apmPostgres.yml
        DOWNLOAD_STEMCELL_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/apmPostgres-stemcell.yml
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/apmPostgres.yml
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
        VARS_FILES: secrets/environments/((iaas))/((foundation))/config/secrets/pivnet.yml

    - task: configure
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-product.yml
      input_mapping:
        config: configuration
        env: interpolated-files
        vars: configuration
        secrets: interpolated-files
      params:
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/apmPostgres.yml
        VARS_FILES: |
          vars/environments/((iaas))/((foundation))/config/defaults/apmPostgres.yml
          vars/environments/((iaas))/common/apmPostgres.yml
          vars/environments/((iaas))/((foundation))/config/vars/apmPostgres.yml
          secrets/environments/((iaas))/((foundation))/config/secrets/apmPostgres.yml
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

    - task: apply-product-changes
      image: platform-automation-image
      file: configuration/ci/tasks-proposed/apply-product-changes.yml
      attempts: 10
      input_mapping:
        config: configuration
        env: interpolated-files
      params:
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/apmPostgres.yml
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

- name: apmPostgres-errands
  plan:
    - aggregate:
        - get: configuration
          trigger: true
          passed: [ apmPostgres ]
        - get: platform-automation-image
          resource: platform-automation
          params:
            unpack: true
            globs: ["*image*"]
        - get: platform-automation-tasks
          resource: platform-automation
          params:
            unpack: true
            globs: ["*tasks*"]

    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params: *credhub_interpolate_params
      input_mapping:
        files: configuration

    - task: delete-prior-space
      attempts: 5
      image: platform-automation-image
      file: configuration/ci/tasks-proposed/run-errand.yml
      input_mapping:
        config: configuration
        env: interpolated-files
      params:
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/apmPostgres.yml
        ERRAND_NAME: delete-prior-space
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
        INSTANCE: errand-runner

    - task: migrate-route
      attempts: 5
      image: platform-automation-image
      file: configuration/ci/tasks-proposed/run-errand.yml
      input_mapping:
        config: configuration
        env: interpolated-files
      params:
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/apmPostgres.yml
        ERRAND_NAME: migrate-route
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
        INSTANCE: errand-runner

    - task: push-apps
      attempts: 5
      image: platform-automation-image
      file: configuration/ci/tasks-proposed/run-errand.yml
      input_mapping:
        config: configuration
        env: interpolated-files
      params:
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/apmPostgres.yml
        ERRAND_NAME: push-apps
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
        INSTANCE: errand-runner

    - task: smoke-tests
      attempts: 5
      image: platform-automation-image
      file: configuration/ci/tasks-proposed/run-errand.yml
      input_mapping:
        config: configuration
        env: interpolated-files
      params:
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/apmPostgres.yml
        ERRAND_NAME: smoke-tests
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
        INSTANCE: errand-runner

- name: credhub-service-broker
  serial: true
  plan:
    - aggregate:
        - get: configuration
          trigger: true
          passed: [ apmPostgres ]
        - get: platform-automation-image
          resource: platform-automation
          params:
            unpack: true
            globs: ["*image*"]
        - get: platform-automation-tasks
          resource: platform-automation
          params:
            unpack: true
            globs: ["*tasks*"]

    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params: *credhub_interpolate_params
      input_mapping:
        files: configuration

    - task: download-stage-tile-stemcell
      image: platform-automation-image
      file: configuration/ci/tasks-proposed/download-stage-tile-stemcell.yml
      input_mapping:
        config: configuration
        download-config: configuration
        env: interpolated-files
        secrets: interpolated-files
      params:
        DOWNLOAD_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/credhub-service-broker.yml
        DOWNLOAD_STEMCELL_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/credhub-service-broker-stemcell.yml
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/credhub-service-broker.yml
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
        VARS_FILES: secrets/environments/((iaas))/((foundation))/config/secrets/pivnet.yml

    - task: configure
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-product.yml
      input_mapping:
        config: configuration
        env: interpolated-files
        vars: configuration
        secrets: interpolated-files
      params:
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/credhub-service-broker.yml
        VARS_FILES: |
          vars/environments/((iaas))/((foundation))/config/defaults/credhub-service-broker.yml
          vars/environments/((iaas))/common/credhub-service-broker.yml
          vars/environments/((iaas))/((foundation))/config/vars/credhub-service-broker.yml
          secrets/environments/((iaas))/((foundation))/config/secrets/credhub-service-broker.yml
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

    - task: apply-product-changes
      image: platform-automation-image
      file: configuration/ci/tasks-proposed/apply-product-changes.yml
      attempts: 10
      input_mapping:
        config: configuration
        env: interpolated-files
      params:
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/credhub-service-broker.yml
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

- name: credhub-service-broker-errands
  plan:
    - aggregate:
        - get: configuration
          trigger: true
          passed: [ credhub-service-broker ]
        - get: platform-automation-image
          resource: platform-automation
          params:
            unpack: true
            globs: ["*image*"]
        - get: platform-automation-tasks
          resource: platform-automation
          params:
            unpack: true
            globs: ["*tasks*"]

    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params: *credhub_interpolate_params
      input_mapping:
        files: configuration

    - task: deploy-all
      attempts: 5
      image: platform-automation-image
      file: configuration/ci/tasks-proposed/run-errand.yml
      input_mapping:
        config: configuration
        env: interpolated-files
      params:
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/credhub-service-broker.yml
        ERRAND_NAME: deploy-all
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

- name: pivotal_single_sign-on_service
  serial: true
  plan:
    - aggregate:
        - get: configuration
          trigger: true
          passed: [ credhub-service-broker ]
        - get: platform-automation-image
          resource: platform-automation
          params:
            unpack: true
            globs: ["*image*"]
        - get: platform-automation-tasks
          resource: platform-automation
          params:
            unpack: true
            globs: ["*tasks*"]

    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params: *credhub_interpolate_params
      input_mapping:
        files: configuration

    - task: download-stage-tile-stemcell
      image: platform-automation-image
      file: configuration/ci/tasks-proposed/download-stage-tile-stemcell.yml
      input_mapping:
        config: configuration
        download-config: configuration
        env: interpolated-files
        secrets: interpolated-files
      params:
        DOWNLOAD_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/pivotal_single_sign-on_service.yml
        DOWNLOAD_STEMCELL_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/pivotal_single_sign-on_service-stemcell.yml
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/pivotal_single_sign-on_service.yml
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
        VARS_FILES: secrets/environments/((iaas))/((foundation))/config/secrets/pivnet.yml

    - task: configure
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-product.yml
      input_mapping:
        config: configuration
        env: interpolated-files
        vars: configuration
        secrets: interpolated-files
      params:
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/pivotal_single_sign-on_service.yml
        VARS_FILES: |
          vars/environments/((iaas))/((foundation))/config/defaults/pivotal_single_sign-on_service.yml
          vars/environments/((iaas))/common/pivotal_single_sign-on_service.yml
          vars/environments/((iaas))/((foundation))/config/vars/pivotal_single_sign-on_service.yml
          secrets/environments/((iaas))/((foundation))/config/secrets/pivotal_single_sign-on_service.yml
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

    - task: apply-product-changes
      image: platform-automation-image
      file: configuration/ci/tasks-proposed/apply-product-changes.yml
      attempts: 10
      input_mapping:
        config: configuration
        env: interpolated-files
      params:
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/pivotal_single_sign-on_service.yml
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

- name: pivotal_single_sign-on_service-errands
  plan:
    - aggregate:
        - get: configuration
          trigger: true
          passed: [ pivotal_single_sign-on_service ]
        - get: platform-automation-image
          resource: platform-automation
          params:
            unpack: true
            globs: ["*image*"]
        - get: platform-automation-tasks
          resource: platform-automation
          params:
            unpack: true
            globs: ["*tasks*"]

    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params: *credhub_interpolate_params
      input_mapping:
        files: configuration

    - task: deploy-service-broker
      attempts: 5
      image: platform-automation-image
      file: configuration/ci/tasks-proposed/run-errand.yml
      input_mapping:
        config: configuration
        env: interpolated-files
      params:
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/pivotal_single_sign-on_service.yml
        ERRAND_NAME: deploy-service-broker
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

- name: p-event-alerts
  serial: true
  plan:
    - aggregate:
        - get: configuration
          trigger: true
          passed: [ pivotal_single_sign-on_service ]
        - get: platform-automation-image
          resource: platform-automation
          params:
            unpack: true
            globs: ["*image*"]
        - get: platform-automation-tasks
          resource: platform-automation
          params:
            unpack: true
            globs: ["*tasks*"]

    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params: *credhub_interpolate_params
      input_mapping:
        files: configuration

    - task: download-stage-tile-stemcell
      image: platform-automation-image
      file: configuration/ci/tasks-proposed/download-stage-tile-stemcell.yml
      input_mapping:
        config: configuration
        download-config: configuration
        env: interpolated-files
        secrets: interpolated-files
      params:
        DOWNLOAD_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/p-event-alerts.yml
        DOWNLOAD_STEMCELL_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/p-event-alerts-stemcell.yml
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-event-alerts.yml
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
        VARS_FILES: secrets/environments/((iaas))/((foundation))/config/secrets/pivnet.yml

    - task: configure
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-product.yml
      input_mapping:
        config: configuration
        env: interpolated-files
        vars: configuration
        secrets: interpolated-files
      params:
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-event-alerts.yml
        VARS_FILES: |
          vars/environments/((iaas))/((foundation))/config/defaults/p-event-alerts.yml
          vars/environments/((iaas))/common/p-event-alerts.yml
          vars/environments/((iaas))/((foundation))/config/vars/p-event-alerts.yml
          secrets/environments/((iaas))/((foundation))/config/secrets/p-event-alerts.yml
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

    - task: apply-product-changes
      image: platform-automation-image
      file: configuration/ci/tasks-proposed/apply-product-changes.yml
      attempts: 10
      input_mapping:
        config: configuration
        env: interpolated-files
      params:
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-event-alerts.yml
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

- name: p-event-alerts-errands
  plan:
    - aggregate:
        - get: configuration
          trigger: true
          passed: [ p-event-alerts ]
        - get: platform-automation-image
          resource: platform-automation
          params:
            unpack: true
            globs: ["*image*"]
        - get: platform-automation-tasks
          resource: platform-automation
          params:
            unpack: true
            globs: ["*tasks*"]

    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params: *credhub_interpolate_params
      input_mapping:
        files: configuration

    - task: deploy-pcf-event-alerts
      attempts: 5
      image: platform-automation-image
      file: configuration/ci/tasks-proposed/run-errand.yml
      input_mapping:
        config: configuration
        env: interpolated-files
      params:
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-event-alerts.yml
        ERRAND_NAME: deploy-pcf-event-alerts
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

- name: p-cloudcache
  serial: true
  plan:
    - aggregate:
        - get: configuration
          trigger: true
          passed: [ p-event-alerts ]
        - get: platform-automation-image
          resource: platform-automation
          params:
            unpack: true
            globs: ["*image*"]
        - get: platform-automation-tasks
          resource: platform-automation
          params:
            unpack: true
            globs: ["*tasks*"]

    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params: *credhub_interpolate_params
      input_mapping:
        files: configuration

    - task: download-stage-tile-stemcell
      image: platform-automation-image
      file: configuration/ci/tasks-proposed/download-stage-tile-stemcell.yml
      input_mapping:
        config: configuration
        download-config: configuration
        env: interpolated-files
        secrets: interpolated-files
      params:
        DOWNLOAD_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/p-cloudcache.yml
        DOWNLOAD_STEMCELL_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/p-cloudcache-stemcell.yml
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-cloudcache.yml
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
        VARS_FILES: secrets/environments/((iaas))/((foundation))/config/secrets/pivnet.yml

    - task: configure
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-product.yml
      input_mapping:
        config: configuration
        env: interpolated-files
        vars: configuration
        secrets: interpolated-files
      params:
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-cloudcache.yml
        VARS_FILES: |
          vars/environments/((iaas))/((foundation))/config/defaults/p-cloudcache.yml
          vars/environments/((iaas))/common/p-cloudcache.yml
          vars/environments/((iaas))/((foundation))/config/vars/p-cloudcache.yml
          secrets/environments/((iaas))/((foundation))/config/secrets/p-cloudcache.yml
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

    - task: apply-product-changes
      image: platform-automation-image
      file: configuration/ci/tasks-proposed/apply-product-changes.yml
      attempts: 10
      input_mapping:
        config: configuration
        env: interpolated-files
      params:
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-cloudcache.yml
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

- name: p-cloudcache-errands
  plan:
    - aggregate:
        - get: configuration
          trigger: true
          passed: [ p-cloudcache ]
        - get: platform-automation-image
          resource: platform-automation
          params:
            unpack: true
            globs: ["*image*"]
        - get: platform-automation-tasks
          resource: platform-automation
          params:
            unpack: true
            globs: ["*tasks*"]

    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params: *credhub_interpolate_params
      input_mapping:
        files: configuration

    - task: register-broker
      attempts: 5
      image: platform-automation-image
      file: configuration/ci/tasks-proposed/run-errand.yml
      input_mapping:
        config: configuration
        env: interpolated-files
      params:
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-cloudcache.yml
        ERRAND_NAME: register-broker
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
        
    - task: upgrade-all-service-instances
      attempts: 5
      image: platform-automation-image
      file: configuration/ci/tasks-proposed/run-errand.yml
      input_mapping:
        config: configuration
        env: interpolated-files
      params:
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-cloudcache.yml
        ERRAND_NAME: upgrade-all-service-instances
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

    - task: smoke-tests
      attempts: 5
      image: platform-automation-image
      file: configuration/ci/tasks-proposed/run-errand.yml
      input_mapping:
        config: configuration
        env: interpolated-files
      params:
        CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-cloudcache.yml
        ERRAND_NAME: smoke-tests
        ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
        


- name: unlock-tile
  serial: true
  plan:
  - get: configuration
    trigger: true
    passed:
    - "pas-errands"
    - "pivotal-mysql-errands"
    - "p-healthwatch-errands"
    - "p-redis-errands"
    - "p-rabbitmq-errands"
    - "apmPostgres-errands"
    - "credhub-service-broker-errands"
    - "pivotal_single_sign-on_service-errands"
    - "p-event-alerts-errands"
    - "p-cloudcache-errands"
  - get: lock
  - put: lock
    params:
      release: lock

# Can't seem to get the right version of this to work
# - name: deploy-latest-pipeline
#   plan:
#   - get: configuration
#     trigger: true
#     passed:
#     - unlock-tile
#   - put: fly
#     params: &fly_params
#       pipelines:
#       - name: new-platform-automation
#         team: ((team))
#         config_file: configuration/environments/((iaas))/((foundation))/pipeline.yml
#         vars_files:
#         - configuration/environments/((iaas))/((foundation))/pipeline-params.yml

# - name: force-deploy-latest-pipeline
#   plan:
#   - get: configuration
#   - put: fly
#     params: *fly_params

